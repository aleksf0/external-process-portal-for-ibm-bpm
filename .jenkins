stage 'Maven build & Unittesting'
node ('nodejs') {
        checkout scm
        //sh 'npm run test'
        //step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
}
stage 'Openshift Build and deploy to DEV'
node {
        // Start the OpenShift build
        openshiftBuild apiURL: '', authToken: '', bldCfg: 'birdie-portal', buildName: '', checkForTriggeredDeployments: 'true', commitID: '', namespace: '', showBuildLogs: 'true', verbose: 'false', waitTime: '', waitUnit: 'sec'
        // Verify the deployment
        openshiftVerifyDeployment apiURL: '', authToken: '', depCfg: 'birdie-portal', namespace: '', replicaCount: '', verbose: 'false', verifyReplicaCount: 'false', waitTime: '', waitUnit: 'sec'
}

stage 'Promote and deploy to TEST'
node {
        // Tag to promote to TEST, will deploy automaticlly after tagging is done
        openshiftTag alias: 'false', apiURL: '', authToken: '', destStream: 'birdie-portal', destTag: 'rdy_test', destinationAuthToken: '', destinationNamespace: 'birdie-wffb-test', namespace: 'birdie-wffb-dev', srcStream: 'birdie-portal', srcTag: 'latest', verbose: 'false'
        // Verify the deplyment not counting the number of pods
        openshiftVerifyDeployment apiURL: '', authToken: '', depCfg: 'birdie-portal', namespace: 'birdie-wffb-test', replicaCount: '', verbose: 'false', verifyReplicaCount: 'false', waitTime: '', waitUnit: 'sec'
}
stage 'Promote and deploy to SYST'
node {
        // Tag to promote to TEST, will deploy automaticlly after tagging is done
        openshiftTag alias: 'false', apiURL: '', authToken: '', destStream: 'birdie-portal', destTag: 'rdy_syst', destinationAuthToken: '', destinationNamespace: 'birdie-wffb-syst', namespace: 'birdie-wffb-test', srcStream: 'birdie-portal', srcTag: 'rdy_test', verbose: 'false'
        // Verify the deplyment not counting the number of pods
        openshiftVerifyDeployment apiURL: '', authToken: '', depCfg: 'birdie-portal', namespace: 'birdie-wffb-syst', replicaCount: '', verbose: 'false', verifyReplicaCount: 'false', waitTime: '', waitUnit: 'sec'
}
stage 'Promote and deploy to PROD'
timeout(time:5, unit:'DAYS') {
    input message:'Deploy to production?'
}
node {
        // Tag to promote to TEST, will deploy automaticlly after tagging is done
        openshiftTag alias: 'false', apiURL: '', authToken: '', destStream: 'birdie-portal', destTag: 'rdy_prod', destinationAuthToken: '', destinationNamespace: 'birdie-wffb', namespace: 'birdie-wffb-syst', srcStream: 'birdie-portal', srcTag: 'rdy_syst', verbose: 'false'
        // Verify the deplyment not counting the number of pods
        openshiftVerifyDeployment apiURL: '', authToken: '', depCfg: 'birdie-portal', namespace: 'birdie-wffb', replicaCount: '', verbose: 'false', verifyReplicaCount: 'false', waitTime: '', waitUnit: 'sec'
}
